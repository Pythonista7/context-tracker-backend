from datetime import datetime
from typing import List,Optional

from pydantic import BaseModel,Field
from PIL import Image

class ScreenCaptureData(BaseModel):
    context_id: Optional[str] = Field(default=None,description="The id of the context table entry to which this screen capture belongs.Generated by DB.")
    # image: Image.Image = Field(default=None,description="The image of the screen capture.") # remove cause we cannot serialize it
    notes: Optional[List[str]] = Field(description="User added notes",default=None)
    resources: Optional[List[str]] = Field(description="URLs, paths, people/contacts, etc.",default=None) 
    created_at: datetime = Field(description="The timestamp of the screen capture.")
    # LLM useful information
    main_topic: str = Field(description="The main topic of the screen capture.")
    summary: str = Field(description="A summary of the screen capture.")
    is_learning_moment: bool = Field(description="Whether the screen capture is a learning moment.")
    learning_observations: Optional[List[str]] = Field(description="List of strings, representing observations about the screen capture that are useful for learning.",default=None)


class Context(BaseModel):
    """Note: This is a shared contract with the user interface , currently just raycast."""
    id: str
    name: str 
    color: str
    last_active: datetime = Field(default_factory=datetime.now)
    notes: List[str] = Field(default_factory=list)
    resources: List[str] = Field(default_factory=list)
